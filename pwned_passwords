
#CREATE DIRECTORY FOR THE FILES TO BE DOWNLOADED AND EXTRACTED
$dir = "C:\Tools\PwnedPassword_Check\Pwned_Passwords"
if (-not (Test-Path -LiteralPath $dir)) {
    mkdir $dir
    }

#NAVIGATE TO THE NEW DIRECTORY
cd $dir

#LOAD DSINTERNALS MODULE
[Net.ServicePointManager]::SecurityProtocol = "tls12"
if (-not (Get-Module -ListAvailable -Name DSInternals)){
Register-PSRepository -Default -InstallationPolicy Trusted
Install-Module DSInternals -Force
}

#DOWNLOAD NEWEST PWNED PASSWORDS LIST
$ProgressPreference = 'SilentlyContinue'
wget "https://downloads.pwnedpasswords.com/passwords/pwned-passwords-ntlm-ordered-by-hash-v7.7z" -outfile $dir\pwned-passwords-ntlm-ordered-by-hash-v7.7z

#EXTRACT PWNDED PASSWORDS LIST
C:\Tools\7-Zip\7z.exe e $dir\pwned-passwords-ntlm-ordered-by-hash-v7.7z

#COMPARE AD PASSWORDS AGAINST PWNDED PASSWORDS LIST
Get-ADReplAccount -All -Server DC -NamingContext "dc=ACCU,dc=LOCAL" | Test-PasswordQuality -WeakPasswordHashesFile "$dir\pwned-passwords-ntlm-ordered-by-hash-v7.txt" | Out-File "$dir\PwndPasswords.txt"

#EMAIL RESULTS
$username = "<username>" #User must have send as permissions on security@accu-precision.com shared mailbox.
$password = "<password>"
$secstr = New-Object -TypeName System.Security.SecureString
$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)}
$cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $secstr

$From = "security@accu-precision.com"
$To = "geeks@accu-precision.com"
#$Cc = "example.com"
$Attachment = "$dir\PwndPasswords.txt"
$Subject = "Pwned Passwords Report"
$Body = "Pwned Passwords Report"
$SMTPServer = "smtp.office365.com"
$SMTPPort = "587"
Send-MailMessage -From $From -to $To -Subject $Subject -Body $Body -Attachment $Attachment -SmtpServer $SMTPServer -port $SMTPPort -UseSsl -Credential ($cred)

#CLEANUP DIRECTORY
cd ..
remove-item -Path $dir -Recurse
